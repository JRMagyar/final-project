{"version":3,"sources":["components/FlexWrap/index.js","pages/Login/index.js","components/Calendar/index.js","pages/Dashboard/index.js","components/AddSection/index.js","pages/Expenses/index.js","pages/Finances/index.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["FlexRow","_ref","children","react_default","a","createElement","className","FlexCol","_ref2","Login","state","redirectToRef","action","method","type","name","placeholder","value","class","data-onsuccess","data-theme","React","Component","DemoApp","main_esm","showNonCurrentDates","fixedWeekCount","defaultView","plugins","dayGridPlugin","Dashboard","props","react_responsive_default","minDeviceWidth","matches","Calendar_DemoApp","AddSection","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","notClickedYet","ExpandBox","setState","console","log","style","backgroundColor","height","handleSubmit","bind","assertThisInitialized","e","alert","input","preventDefault","onClick","onSubmit","visibility","label","Expenses","components_AddSection","Finances","Nav","auth","display","handleModal","_this2","href","fakeAuth","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","App","BrowserRouter","NavBar","exact","path","App_PrivateRoute","Calendar","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9433f7e2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nexport function FlexRow({children}){\n    return (\n        <div className='flex-row'>{children}</div>\n    )\n}\n\nexport function FlexCol({children}){\n    return (\n        <div className='flex-col'>{children}</div>\n    )\n}","import React from \"react\";\nimport { FlexCol } from \"../../components/FlexWrap/index\";\nimport \"./style.css\"\n\nclass Login extends React.Component {\n\n    state = {\n        redirectToRef: false\n    }\n\n    render(){\n\n        return (\n            <div className=\"hero-bkg-animated\">\n                <FlexCol>\n                    <article className=\"login-area\">\n                        <div className=\"title\">\n                            <h1>\n                                welcome to uncle\n                            </h1>\n                            <p>\n                                a friendly (but not to friendly) household management app\n                            </p>\n                        </div>\n                        <form action=\"/\" method=\"post\" className=\"signin-form\">\n                            <input type=\"text\" name=\"username\" placeholder=\"enter username\"/>\n                            <input type=\"password\" name=\"password\" placeholder=\"enter password\"/>\n                            <input type=\"submit\" value=\"Login\" />\n                        </form>\n                        <p>or</p>\n                        <article class=\"g-signin2\" data-onsuccess=\"onSignIn\" data-theme=\"dark\"></article>\n                    </article>\n                </FlexCol>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nimport \"./main.css\"\n\nexport default class DemoApp extends React.Component {\n\n  render() {\n    return (\n      <FullCalendar\n        showNonCurrentDates={false} \n        // height={530} \n        \n        fixedWeekCount={false}\n        defaultView=\"dayGridMonth\" \n        plugins={[ dayGridPlugin ]} />\n    )\n  }\n\n}","import React from \"react\";\nimport \"./style.css\";\nimport MediaQuery from 'react-responsive';\nimport Calendar from \"../../components/Calendar/index\";\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\n\nfunction Dashboard(props){\n    return (\n        <MediaQuery minDeviceWidth={700}>\n            {(matches) => {\n                if (matches) {\n                    return  <FlexRow>\n                    <article className=\"flex-child title-area\">\n                        Dashboard{/* {props.pagename} */}\n                    </article>\n                    <article className=\"flex-child left-child\">\n                        <Calendar ></Calendar>\n                    </article>\n                    <article className=\"flex-child right-child\">\n                        notification list\n                    </article>\n                    </FlexRow>\n                } else {\n                    return  <FlexCol>\n                    <article className=\"title-areaM\">\n                        Dashboard{/* {props.pagename} */}\n                    </article>\n                    <article className=\"calendarM\">\n                        <Calendar></Calendar>\n                    </article>\n                    <article className=\"note-listM\">\n                        notification list\n                    </article>\n                    </FlexCol>\n                }\n            }}\n        </MediaQuery>\n    );\n}\n\nexport default Dashboard;","import React from \"react\";\nimport \"./style.css\";\n//import ReactDOM from \"react-dom\";\n\nclass AddSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      handleSubmit(e) {\n        alert('The value is: ' + this.input.value);\n        e.preventDefault();\n      }\n    state = {\n        notClickedYet: true\n    }\n\n    ExpandBox = () => {\n        if (!this.state.notClickedYet) {\n            this.setState({ notClickedYet: true });\n            console.log(this.state.notClickedYet);\n            return (\n                <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: \"90%\" }}>\n\n                </article>\n            )\n        } else {\n            this.setState({ notClickedYet: false });\n            console.log(this.state.notClickedYet);\n            return (\n                <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", \"height\": \"35%\" }}>\n\n                </article>\n            );\n        }\n\n    }\n    \n    render() {\n        //if the button is clicked than the form will be visible in formDiv\n        // and if clicked again the in the form will be hidden until next btn click and so forth\n        //UPDATE: We have to get another button if we want to add another input and keeps going and going.\n        return (\n            <div className=\"formDiv\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: this.state.notClickedYet ? \"35%\" : \"60%\" }}>\n            <button onClick={this.ExpandBox}>ADD STUFF</button>\n            {/* <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: \"35%\" }}>\n            </article> */}\n                <form className=\"add-form\" onSubmit={this.handleSubmit} style={{visibility: this.state.notClickedYet ? \"hidden\" : \"visible\"}}>\n                    <input type=\"text\" name=\"exp-name\" placeholder=\"enter expense\"/>\n                    <input type=\"number\" name=\"exp-amount\" placeholder=\"expense amount\"/>\n                    <input type=\"text\" name=\"exp-category\" placeholder=\"select category\"/>\n                    <select name=\"exp-recur\">\n                        \n                        <option label=\"yes\" value=\"true\">yes</option> \n                        <option label=\"no\" value=\"false\">no</option> \n                        \n                    </select>\n                    <select name=\"exp-freq\">\n                        <option value=\"monthly\">monthly</option>\n                        <option value=\"bi-weekly\">bi-weekly</option>\n                        <option value=\"weekly\">weekly</option>\n                        <option value=\"daily\">daily</option>\n                        <option value=\"yearly\">yearly</option>\n                    </select>\n                    <textarea type=\"text\" name=\"exp-descrip\" >expense description</textarea>\n                    <input type=\"submit\" value=\"Add\" />\n                </form>\n            </div>\n        );\n\n    }\n\n}\n\nexport default AddSection;","import React from \"react\";\nimport \"./style.css\";\nimport MediaQuery from 'react-responsive';\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\nimport AddSection from \"../../components/AddSection/index\";\n\n\nfunction Expenses(props) {\n    return (\n        <MediaQuery minDeviceWidth={700}>\n            {(matches) => {\n                if (matches) {\n                    return <FlexRow>\n                        <article className=\"flex-child title-area\">\n                            expenses title{/* {props.pagename} */}\n                        </article>\n                        <div className=\"flex-child left-child-p\">\n                            <article className=\"calendar-area-mini\">\n                                area for calendar\n                                \n                        </article>\n                        \n                        <AddSection/>  {/*-->below comment is the same in the class AddSection render */}\n                        \n                            {/* <article className=\"add-box\">\n                                ADD BOX\n                                {/* // add item area */}\n\n                                {/* click to expand the flex container \n\n                            </article> */}\n\n                        </div>\n                        <article className=\"flex-child right-child-p\">\n                            expenses list (quick view / expand view / update & delete)\n                    </article>\n                    </FlexRow>\n                } else {\n                    return <FlexCol>\n                        <article className=\"title-areaM\">\n                            expenses title{/* {props.pagename} */}\n                        </article>\n                        <article className=\"calendarM\">\n                            area for calendar / click to add\n                    </article>\n                        <article className=\"note-listM\">\n                            expenses list\n                    </article>\n                    </FlexCol>\n                }\n            }}\n        </MediaQuery>\n    );\n}\n\nexport default Expenses;","import React from \"react\";\nimport \"./style.css\";\nimport MediaQuery from 'react-responsive';\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\n\nfunction Finances(){\n    return (\n        <MediaQuery minDeviceWidth={700}>\n            {(matches) => {\n                if (matches) {\n                    return  <FlexRow>\n                    <article className=\"calendar\">\n                        area for calendar\n                    </article>\n                    <article className=\"note-list\">\n                        notification list\n                    </article>\n                    </FlexRow>\n                } else {\n                    return  <FlexCol>\n                    <article className=\"calendar\">\n                        area for calendar\n                    </article>\n                    <article className=\"note-list\">\n                        notification list\n                    </article>\n                    </FlexCol>\n                }\n            }}\n        </MediaQuery>\n    );\n}\n\nexport default Finances;","import React from \"react\";\nimport \"./style.css\";\nimport MediaQuery from 'react-responsive';\n\nclass Nav extends React.Component {\n\n    state = {\n        auth: false,\n        display: false\n    }\n\n    handleModal = () => {\n        if(!this.state.display){\n            this.setState({ display: true });\n        } else{\n            this.setState({ display: false });\n        }\n    } \n\n    render(){\n        return (\n            <div>\n                <nav className=\"main-nav\">\n                    <a className=\"nav-brand\" href=\"/dashboard\">\n                        Uncle\n                    </a>\n                    <button className=\"nav-button-open\" onClick={this.handleModal}>\n                        &#9776;\n                    </button>\n                </nav>\n                <MediaQuery minDeviceWidth={700}>\n                    {(matches) =>{\n                        if(matches){\n                            return <div className=\"nav-modal\" style={{display: this.state.display ? 'flex' : 'none' }}>\n                                <span className=\"nav-button-closed\" onClick={this.handleModal}>&times;</span>\n                                <a href=\"/\" onClick=\"signOut();\">Sign out</a>\n                                <a href=\"/dashboard\">dashboard</a>\n                                <a href=\"/expenses\">expenses</a>\n                            </div>\n                        } else {\n                            return <div className=\"nav-modal-mobile\" style={{display: this.state.display ? 'flex' : 'none' }}>\n                                <span className=\"nav-button-closed\" onClick={this.handleModal}>&times;</span>\n                                <a href=\"/\" onClick=\"signOut();\">Sign out</a>\n                                <a href=\"/dashboard\">dashboard</a>\n                                <a href=\"/expenses\">expenses</a>\n                            </div>\n                        }\n                    }}\n                </MediaQuery>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./pages/Login/index\";\nimport Dashboard from \"./pages/Dashboard/index\";\nimport Expenses from \"./pages/Expenses/index\";\nimport Finances from \"./pages/Finances/index\";\nimport Nav from \"./components/NavBar/index\";\nimport Calendar from \"./components/Calendar/index\";\n// import AddSection from \"../../components/AddSection/index\";\n\nconst fakeAuth = {\n  isAuth: true,\n  auth(cb) {\n    this.isAuth = true;\n    setTimeout(cb, 100) //fake async\n  },\n  signOut(cb) {\n    this.isAuth = false;\n    setTimeout(cb, 100) //fake async\n  }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    fakeAuth.isAuth === true\n    ? <Component {...props} />\n    : <Redirect to=\"/\" />\n  )} />\n)\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <div>\n              <Nav />\n              <Route exact path=\"/\" component={Login} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/expenses\" component={Expenses} />\n              <PrivateRoute exact path=\"/finances\" component={Finances} />\n              <Route exact path =\"/test\" component={Calendar} />\n          </div>\n        </Router>\n      );\n    }\n  }\n  \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}