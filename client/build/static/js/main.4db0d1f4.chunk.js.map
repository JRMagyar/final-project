{"version":3,"sources":["components/FlexWrap/index.js","pages/Login/index.js","components/Calendar/index.js","pages/Dashboard/index.js","components/AddSection/index.js","pages/Expenses/index.js","pages/Finances/index.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["FlexRow","_ref","children","react_default","a","createElement","className","FlexCol","_ref2","Login","state","redirectToRef","login","evn","preventDefault","console","log","Axios","get","then","response","type","name","placeholder","autoComplete","onClick","this","value","React","Component","Calendar","testEvents","allDay","start","title","url","events","getSchedule","id","axios","loadSchedule","_this2","res","i","data","length","schedule","calendar","backgroundColor","push","setState","main_esm","showNonCurrentDates","fixedWeekCount","defaultView","plugins","dayGridPlugin","Dashboard","props","react_responsive_default","minDeviceWidth","matches","Calendar_Calendar","AddSection","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","notClickedYet","ExpandBox","style","height","handleSubmit","bind","assertThisInitialized","e","alert","input","onSubmit","visibility","label","Expenses","components_AddSection","Finances","Nav","auth","display","handleModal","href","fakeAuth","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","App","BrowserRouter","NavBar","exact","path","App_PrivateRoute","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db0d1f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nexport function FlexRow({children}){\r\n    return (\r\n        <div className='flex-row'>{children}</div>\r\n    )\r\n}\r\n\r\nexport function FlexCol({children}){\r\n    return (\r\n        <div className='flex-col'>{children}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport { FlexCol } from \"../../components/FlexWrap/index\";\r\nimport \"./style.css\"\r\nimport Axios from \"axios\";\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        redirectToRef: false\r\n    }\r\n\r\n    login = (evn) => {\r\n        evn.preventDefault();\r\n        console.log(\"get the user info from db\");\r\n        Axios.get('/users/')\r\n            .then(function (response) {\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"hero-bkg-animated\">\r\n                <FlexCol>\r\n                    <article className=\"login-area\">\r\n                        <div className=\"title\">\r\n                            <h1>\r\n                                welcome to uncle\r\n                            </h1>\r\n                            <p>\r\n                                a friendly (but not to friendly) household management app\r\n                            </p>\r\n                        </div>\r\n                        <form className=\"signin-form\">\r\n                            <input type=\"text\" name=\"username\" placeholder=\"enter username\"/>\r\n                            <input type=\"password\" name=\"password\" autoComplete=\"on\" placeholder=\"enter password\"/>\r\n                            <input type=\"submit\" onClick={this.login} value=\"Login\" />\r\n                        </form>\r\n                        {/* <p>or</p>\r\n                        <article class=\"g-signin2\" data-onsuccess=\"onSignIn\" data-theme=\"dark\"></article> */}\r\n                    </article>\r\n                </FlexCol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./main.css\"\r\n\r\nexport default class Calendar extends React.Component {\r\n  state = {\r\n    testEvents : [\r\n      {allDay: true,\r\n      start: \"2019-04-12\",\r\n      title: \"Test Event 01\",\r\n      url: \"https://mongoosejs.com/docs/populate.html\"\r\n    },\r\n    {allDay: false,\r\n    start: \"2019-04-14T13:30:00\",\r\n    title: \"Test Event 02\"}\r\n  ],\r\n  events: []\r\n}\r\n  componentDidMount(){\r\n    // this.buildSchedule();\r\n    this.loadSchedule();\r\n  }\r\n  \r\n  // buildSchedule(){\r\n  //   this.getSchedule(\"5cafbbab08fb442350951b1f\")\r\n  //   .then(res =>\r\n  //     {\r\n  //       console.log(res.data)\r\n  //       var schedule =[]\r\n        \r\n  //       for(let i = 0; i < res.data.length; i++){\r\n  //         let event = {}\r\n  //         event.title = res.data[i].title\r\n  //         event.start = res.data[i].start\r\n  //         event.allDay = res.data[i].allDay\r\n  //         schedule.push(event)\r\n  //       }\r\n  //       this.setState({events: schedule})\r\n  //       console.log(this.state.events)\r\n  //     }\r\n  //   )\r\n\r\n  // }\r\n  loadSchedule(){\r\n    this.getSchedule(\"5cb1eb274ef1b30d2c9ed094\")\r\n    .then(res =>\r\n      {\r\n        for(let i=0; i < res.data.length; i++){\r\n          let schedule = this.state.events\r\n          let data = res.data[i].calendar\r\n          data.backgroundColor = \"#800000\"\r\n          schedule.push(data)\r\n          this.setState({events: schedule})\r\n        }\r\n      })\r\n  }\r\n  getSchedule = id => {\r\n    return axios.get(\"/allSchedule/\" + id);\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FullCalendar\r\n        showNonCurrentDates={false} \r\n        // height={530} \r\n        events={this.state.events}\r\n        \r\n        fixedWeekCount={false}\r\n        defaultView=\"dayGridMonth\" \r\n        plugins={[ dayGridPlugin ]} />\r\n    )\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport MediaQuery from 'react-responsive';\r\nimport Calendar from \"../../components/Calendar/index\";\r\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\r\n\r\nfunction Dashboard(props){\r\n    return (\r\n        <MediaQuery minDeviceWidth={700}>\r\n            {(matches) => {\r\n                if (matches) {\r\n                    return  <FlexRow>\r\n                    <article className=\"flex-child title-area\">\r\n                        Dashboard{/* {props.pagename} */}\r\n                    </article>\r\n                    <article className=\"flex-child left-child\">\r\n                        <Calendar ></Calendar>\r\n                    </article>\r\n                    <article className=\"flex-child right-child\">\r\n                        notification list\r\n                    </article>\r\n                    </FlexRow>\r\n                } else {\r\n                    return  <FlexCol>\r\n                    <article className=\"title-areaM\">\r\n                        Dashboard{/* {props.pagename} */}\r\n                    </article>\r\n                    <article className=\"calendarM\">\r\n                        <Calendar></Calendar>\r\n                    </article>\r\n                    <article className=\"note-listM\">\r\n                        notification list\r\n                    </article>\r\n                    </FlexCol>\r\n                }\r\n            }}\r\n        </MediaQuery>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport \"./style.css\";\r\n//import ReactDOM from \"react-dom\";\r\n\r\nclass AddSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      handleSubmit(e) {\r\n        alert('The value is: ' + this.input.value);\r\n        e.preventDefault();\r\n      }\r\n    state = {\r\n        notClickedYet: true\r\n    }\r\n\r\n    ExpandBox = () => {\r\n        if (!this.state.notClickedYet) {\r\n            this.setState({ notClickedYet: true });\r\n            console.log(this.state.notClickedYet);\r\n            return (\r\n                <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: \"90%\" }}>\r\n\r\n                </article>\r\n            )\r\n        } else {\r\n            this.setState({ notClickedYet: false });\r\n            console.log(this.state.notClickedYet);\r\n            return (\r\n                <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", \"height\": \"35%\" }}>\r\n\r\n                </article>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        //if the button is clicked than the form will be visible in formDiv\r\n        // and if clicked again the in the form will be hidden until next btn click and so forth\r\n        //UPDATE: We have to get another button if we want to add another input and keeps going and going.\r\n        return (\r\n            <div className=\"formDiv\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: this.state.notClickedYet ? \"35%\" : \"60%\" }}>\r\n            <button onClick={this.ExpandBox}>ADD STUFF</button>\r\n            {/* <article className=\"add-box\" style={{ backgroundColor: \"rgb(126, 240, 240)\", height: \"35%\" }}>\r\n            </article> */}\r\n                <form className=\"add-form\" onSubmit={this.handleSubmit} style={{visibility: this.state.notClickedYet ? \"hidden\" : \"visible\"}}>\r\n                    <input type=\"text\" name=\"exp-name\" placeholder=\"enter expense\"/>\r\n                    <input type=\"number\" name=\"exp-amount\" placeholder=\"expense amount\"/>\r\n                    <input type=\"text\" name=\"exp-category\" placeholder=\"select category\"/>\r\n                    <select name=\"exp-recur\">\r\n                        \r\n                        <option label=\"yes\" value=\"true\">yes</option> \r\n                        <option label=\"no\" value=\"false\">no</option> \r\n                        \r\n                    </select>\r\n                    <select name=\"exp-freq\">\r\n                        <option value=\"monthly\">monthly</option>\r\n                        <option value=\"bi-weekly\">bi-weekly</option>\r\n                        <option value=\"weekly\">weekly</option>\r\n                        <option value=\"daily\">daily</option>\r\n                        <option value=\"yearly\">yearly</option>\r\n                    </select>\r\n                    <textarea type=\"text\" name=\"exp-descrip\" >expense description</textarea>\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AddSection;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport MediaQuery from 'react-responsive';\r\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\r\nimport AddSection from \"../../components/AddSection/index\";\r\n\r\n\r\nfunction Expenses(props) {\r\n    return (\r\n        <MediaQuery minDeviceWidth={700}>\r\n            {(matches) => {\r\n                if (matches) {\r\n                    return <FlexRow>\r\n                        <article className=\"flex-child title-area\">\r\n                            expenses title{/* {props.pagename} */}\r\n                        </article>\r\n                        <div className=\"flex-child left-child-p\">\r\n                            <article className=\"calendar-area-mini\">\r\n                                area for calendar\r\n                                \r\n                        </article>\r\n                        \r\n                        <AddSection/>  {/*-->below comment is the same in the class AddSection render */}\r\n                        \r\n                            {/* <article className=\"add-box\">\r\n                                ADD BOX\r\n                                {/* // add item area */}\r\n\r\n                                {/* click to expand the flex container \r\n\r\n                            </article> */}\r\n\r\n                        </div>\r\n                        <article className=\"flex-child right-child-p\">\r\n                            expenses list (quick view / expand view / update & delete)\r\n                    </article>\r\n                    </FlexRow>\r\n                } else {\r\n                    return <FlexCol>\r\n                        <article className=\"title-areaM\">\r\n                            expenses title{/* {props.pagename} */}\r\n                        </article>\r\n                        <article className=\"calendarM\">\r\n                            area for calendar / click to add\r\n                    </article>\r\n                        <article className=\"note-listM\">\r\n                            expenses list\r\n                    </article>\r\n                    </FlexCol>\r\n                }\r\n            }}\r\n        </MediaQuery>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport MediaQuery from 'react-responsive';\r\nimport { FlexRow, FlexCol } from \"../../components/FlexWrap/index\";\r\n\r\nfunction Finances(){\r\n    return (\r\n        <MediaQuery minDeviceWidth={700}>\r\n            {(matches) => {\r\n                if (matches) {\r\n                    return  <FlexRow>\r\n                    <article className=\"calendar\">\r\n                        area for calendar\r\n                    </article>\r\n                    <article className=\"note-list\">\r\n                        notification list\r\n                    </article>\r\n                    </FlexRow>\r\n                } else {\r\n                    return  <FlexCol>\r\n                    <article className=\"calendar\">\r\n                        area for calendar\r\n                    </article>\r\n                    <article className=\"note-list\">\r\n                        notification list\r\n                    </article>\r\n                    </FlexCol>\r\n                }\r\n            }}\r\n        </MediaQuery>\r\n    );\r\n}\r\n\r\nexport default Finances;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport MediaQuery from 'react-responsive';\r\n\r\nclass Nav extends React.Component {\r\n\r\n    state = {\r\n        auth: false,\r\n        display: false\r\n    }\r\n\r\n    handleModal = () => {\r\n        if(!this.state.display){\r\n            this.setState({ display: true });\r\n        } else{\r\n            this.setState({ display: false });\r\n        }\r\n    } \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <nav className=\"main-nav\">\r\n                    <a className=\"nav-brand\" href=\"/dashboard\">\r\n                        Uncle\r\n                    </a>\r\n                    <button className=\"nav-button-open\" onClick={this.handleModal}>\r\n                        &#9776;\r\n                    </button>\r\n                </nav>\r\n                <MediaQuery minDeviceWidth={700}>\r\n                    {(matches) =>{\r\n                        if(matches){\r\n                            return <div className=\"nav-modal\" style={{display: this.state.display ? 'flex' : 'none' }}>\r\n                                <span className=\"nav-button-closed\" onClick={this.handleModal}>&times;</span>\r\n                                <a href=\"/\" onClick=\"signOut();\">Sign out</a>\r\n                                <a href=\"/dashboard\">dashboard</a>\r\n                                <a href=\"/expenses\">expenses</a>\r\n                            </div>\r\n                        } else {\r\n                            return <div className=\"nav-modal-mobile\" style={{display: this.state.display ? 'flex' : 'none' }}>\r\n                                <span className=\"nav-button-closed\" onClick={this.handleModal}>&times;</span>\r\n                                <a href=\"/\" onClick=\"signOut();\">Sign out</a>\r\n                                <a href=\"/dashboard\">dashboard</a>\r\n                                <a href=\"/expenses\">expenses</a>\r\n                            </div>\r\n                        }\r\n                    }}\r\n                </MediaQuery>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./pages/Login/index\";\r\nimport Dashboard from \"./pages/Dashboard/index\";\r\nimport Expenses from \"./pages/Expenses/index\";\r\nimport Finances from \"./pages/Finances/index\";\r\nimport Nav from \"./components/NavBar/index\";\r\nimport Calendar from \"./components/Calendar/index\";\r\n// import AddSection from \"../../components/AddSection/index\";\r\n\r\nconst fakeAuth = {\r\n  isAuth: false,\r\n  auth(cb) {\r\n    this.isAuth = true;\r\n    setTimeout(cb, 100) //fake async\r\n  },\r\n  signOut(cb) {\r\n    this.isAuth = false;\r\n    setTimeout(cb, 100) //fake async\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth.isAuth === true\r\n    ? <Component {...props} />\r\n    : <Redirect to=\"/\" />\r\n  )} />\r\n)\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  \r\n  render() {\r\n    return (\r\n        <Router>\r\n          <div>\r\n              <Nav />\r\n              <Route exact path=\"/\" component={Login} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/expenses\" component={Expenses} />\r\n              <PrivateRoute exact path=\"/finances\" component={Finances} />\r\n              <Route exact path =\"/test\" component={Calendar} />\r\n          </div>\r\n        </Router>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}